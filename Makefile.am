### GENERATED BY scripts/makemake.py - DO NOT EDIT

ACLOCAL_AMFLAGS = -I m4

AM_CPPFLAGS = \
    -I$(top_srcdir) \
    -I$(top_srcdir)/src

if BUILD_LINUX
AM_CPPFLAGS += -DLINUX
endif
if BUILD_WINDOWS
AM_CPPFLAGS += -DWINDOWS
endif
if BUILD_APPLE
AM_CPPFLAGS += -DAPPLE
endif

AM_LDFLAGS = -pthread

CMOCK_CPPFLAGS = \
    -I$(top_srcdir)/third-party/CMock/vendor/unity/src \
    -I$(top_srcdir)/third-party/CMock/src \
    -Itests/mocks

bin_PROGRAMS =
noinst_LTLIBRARIES =
check_PROGRAMS =
check_LTLIBRARIES =
CLEANFILES =
BUILT_SOURCES =

check_LTLIBRARIES += libcmock.la
libcmock_la_SOURCES = \
    third-party/CMock/src/cmock.c \
    third-party/CMock/src/cmock.h \
    third-party/CMock/src/cmock_internals.h \
    third-party/CMock/vendor/unity/src/unity.c \
    third-party/CMock/vendor/unity/src/unity.h \
    third-party/CMock/vendor/unity/src/unity_internals.h
libcmock_la_CPPFLAGS = $(CMOCK_CPPFLAGS)

CLEANFILES += tests/runners/runner_test_*.c


### cfgfile

noinst_LTLIBRARIES += libcfgfile.la

libcfgfile_la_SOURCES = \
    ./src/cfgfile/cfgmap.c \
    ./src/cfgfile/cfgfile.h \
    ./src/cfgfile/cfgmap.h \
    ./src/cfgfile/cfgfile.c

tests/mocks/mock_cfgfile.c tests/mocks/mock_cfgfile.h: ./src/cfgfile/cfgfile.h
	@test -n "$(RUBY)" || { echo "\nPlease install Ruby to run tests.\n"; exit 1; }
	mkdir -p tests/mocks
	CMOCK_DIR=$(top_srcdir)/third-party/CMock \
	MOCK_OUT=tests/mocks \
	$(RUBY) $(top_srcdir)/third-party/CMock/scripts/create_mock.rb $<

check_LTLIBRARIES += libcfgfile_mock.la

nodist_libcfgfile_mock_la_SOURCES = tests/mocks/mock_cfgfile.c

libcfgfile_mock_la_CPPFLAGS = \
    $(CMOCK_CPPFLAGS) \
    $(AM_CPPFLAGS) \
    -I$(top_srcdir)/src/cfgfile

libcfgfile_mock_la_LIBADD = libcmock.la

CLEANFILES += \
    tests/mocks/mock_cfgfile.c \
    tests/mocks/mock_cfgfile.h

check_PROGRAMS += tests/runners/test_cfgfile

tests/runners/runner_test_cfgfile.c: ./tests/cfgfile/test_cfgfile.c
	@test -n "$(RUBY)" || { echo "\nPlease install Ruby to run tests.\n"; exit 1; }
	mkdir -p tests/runners
	$(RUBY) $(top_srcdir)/third-party/CMock/vendor/unity/auto/generate_test_runner.rb $< $@

tests_runners_test_cfgfile_SOURCES = \
    tests/cfgfile/test_cfgfile.c \
    src/cfgfile/cfgfile.h

nodist_tests_runners_test_cfgfile_SOURCES = tests/runners/runner_test_cfgfile.c

tests/cfgfile/runners_test_cfgfile-test_cfgfile.$(OBJEXT): \
    tests/runners/runner_test_cfgfile.c \
    libcmock.la \
    libcfgfile.la

CLEANFILES += tests/runners/runner_test_cfgfile.c

tests_runners_test_cfgfile_LDADD = \
    libcmock.la \
    libcfgfile.la

tests_runners_test_cfgfile_CPPFLAGS = \
    $(CMOCK_CPPFLAGS) \
    $(AM_CPPFLAGS)


### executor

noinst_LTLIBRARIES += libexecutor.la

libexecutor_la_SOURCES = \
    ./src/executor/executor.c \
    ./src/executor/executor.h

libexecutor_la_LIBADD = libcfgfile.la

tests/mocks/mock_executor.c tests/mocks/mock_executor.h: ./src/executor/executor.h
	@test -n "$(RUBY)" || { echo "\nPlease install Ruby to run tests.\n"; exit 1; }
	mkdir -p tests/mocks
	CMOCK_DIR=$(top_srcdir)/third-party/CMock \
	MOCK_OUT=tests/mocks \
	$(RUBY) $(top_srcdir)/third-party/CMock/scripts/create_mock.rb $<

check_LTLIBRARIES += libexecutor_mock.la

nodist_libexecutor_mock_la_SOURCES = tests/mocks/mock_executor.c

libexecutor_mock_la_CPPFLAGS = \
    $(CMOCK_CPPFLAGS) \
    $(AM_CPPFLAGS) \
    -I$(top_srcdir)/src/executor

libexecutor_mock_la_LIBADD = libcmock.la

CLEANFILES += \
    tests/mocks/mock_executor.c \
    tests/mocks/mock_executor.h

check_PROGRAMS += tests/runners/test_executor

tests/runners/runner_test_executor.c: ./tests/executor/test_executor.c
	@test -n "$(RUBY)" || { echo "\nPlease install Ruby to run tests.\n"; exit 1; }
	mkdir -p tests/runners
	$(RUBY) $(top_srcdir)/third-party/CMock/vendor/unity/auto/generate_test_runner.rb $< $@

tests_runners_test_executor_SOURCES = \
    tests/executor/test_executor.c \
    src/executor/executor.h

nodist_tests_runners_test_executor_SOURCES = \
    tests/runners/runner_test_executor.c \
    tests/mocks/mock_cfgfile.c \
    tests/mocks/mock_cfgfile.h

tests/executor/runners_test_executor-test_executor.$(OBJEXT): \
    tests/runners/runner_test_executor.c \
    tests/mocks/mock_cfgfile.c \
    tests/mocks/mock_cfgfile.h \
    libcmock.la \
    libexecutor.la \
    libcfgfile_mock.la

CLEANFILES += tests/runners/runner_test_executor.c

tests_runners_test_executor_LDADD = \
    libcmock.la \
    libexecutor.la \
    libcfgfile_mock.la

tests_runners_test_executor_CPPFLAGS = \
    $(CMOCK_CPPFLAGS) \
    $(AM_CPPFLAGS) \
    -I$(top_srcdir)/src/cfgfile


### myapp

bin_PROGRAMS += myapp

myapp_SOURCES = ./src/myapp/myapp.c

myapp_LDADD = \
    libexecutor.la \
    libreporter.la \
    libtestmod.la


### reporter

noinst_LTLIBRARIES += libreporter.la

libreporter_la_SOURCES = \
    ./src/reporter/reporter.h \
    ./src/reporter/reporter.c

libreporter_la_LIBADD = libcfgfile.la

tests/mocks/mock_reporter.c tests/mocks/mock_reporter.h: ./src/reporter/reporter.h
	@test -n "$(RUBY)" || { echo "\nPlease install Ruby to run tests.\n"; exit 1; }
	mkdir -p tests/mocks
	CMOCK_DIR=$(top_srcdir)/third-party/CMock \
	MOCK_OUT=tests/mocks \
	$(RUBY) $(top_srcdir)/third-party/CMock/scripts/create_mock.rb $<

check_LTLIBRARIES += libreporter_mock.la

nodist_libreporter_mock_la_SOURCES = tests/mocks/mock_reporter.c

libreporter_mock_la_CPPFLAGS = \
    $(CMOCK_CPPFLAGS) \
    $(AM_CPPFLAGS) \
    -I$(top_srcdir)/src/reporter

libreporter_mock_la_LIBADD = libcmock.la

CLEANFILES += \
    tests/mocks/mock_reporter.c \
    tests/mocks/mock_reporter.h


### testmod

noinst_LTLIBRARIES += libtestmod.la

libtestmod_la_SOURCES = \
    ./src/testmod/testmod.h \
    ./src/testmod/testmod.c

tests/mocks/mock_testmod.c tests/mocks/mock_testmod.h: ./src/testmod/testmod.h
	@test -n "$(RUBY)" || { echo "\nPlease install Ruby to run tests.\n"; exit 1; }
	mkdir -p tests/mocks
	CMOCK_DIR=$(top_srcdir)/third-party/CMock \
	MOCK_OUT=tests/mocks \
	$(RUBY) $(top_srcdir)/third-party/CMock/scripts/create_mock.rb $<

check_LTLIBRARIES += libtestmod_mock.la

nodist_libtestmod_mock_la_SOURCES = tests/mocks/mock_testmod.c

libtestmod_mock_la_CPPFLAGS = \
    $(CMOCK_CPPFLAGS) \
    $(AM_CPPFLAGS) \
    -I$(top_srcdir)/src/testmod

libtestmod_mock_la_LIBADD = libcmock.la

CLEANFILES += \
    tests/mocks/mock_testmod.c \
    tests/mocks/mock_testmod.h

check_PROGRAMS += tests/runners/test_testmod

tests/runners/runner_test_testmod.c: ./tests/testmod/test_testmod.c
	@test -n "$(RUBY)" || { echo "\nPlease install Ruby to run tests.\n"; exit 1; }
	mkdir -p tests/runners
	$(RUBY) $(top_srcdir)/third-party/CMock/vendor/unity/auto/generate_test_runner.rb $< $@

tests_runners_test_testmod_SOURCES = \
    tests/testmod/test_testmod.c \
    src/testmod/testmod.h

nodist_tests_runners_test_testmod_SOURCES = tests/runners/runner_test_testmod.c

tests/testmod/runners_test_testmod-test_testmod.$(OBJEXT): \
    tests/runners/runner_test_testmod.c \
    libcmock.la \
    libtestmod.la

CLEANFILES += tests/runners/runner_test_testmod.c

tests_runners_test_testmod_LDADD = \
    libcmock.la \
    libtestmod.la

tests_runners_test_testmod_CPPFLAGS = \
    $(CMOCK_CPPFLAGS) \
    $(AM_CPPFLAGS)

# Example module.mk


TESTS = $(check_PROGRAMS)

EXTRA_DIST = \
    README.md \
    third-party/CMock/LICENSE.txt \
    third-party/CMock/README.md \
    third-party/CMock/config \
    third-party/CMock/lib \
    third-party/CMock/scripts \
    third-party/CMock/vendor/unity/LICENSE.txt \
    third-party/CMock/vendor/unity/README.md \
    third-party/CMock/vendor/unity/auto

# project.mk gets appended to Makefile.am by scripts/makemake.py. It can
# contain additional Automake definitions, as well as Makefile rules in
# Automake-compatible syntax.
#
# The generated Makefile.am creates these Automake list variables, which can be
# extended by project.mk with the += operator:
#
# ACLOCAL_AMFLAGS +=
# AM_CPPFLAGS +=
# AM_LDFLAGS +=
# bin_PROGRAMS +=
# noinst_LTLIBRARIES +=
# check_PROGRAMS +=
# check_LTLIBRARIES +=
# CLEANFILES +=
# BUILT_SOURCES +=
# TESTS +=
# EXTRA_DIST +=
